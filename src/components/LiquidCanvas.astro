---
---

<div class="canvas">
    <nav class="nav-links">
        <a href="/">RETURN TO LAB</a>
    </nav>
    <canvas id="liquid"></canvas>
    <div class="quote-container">
        <p class="quote">Like sunlight on water, we are fleeting, shimmering moments in time.</p>
    </div>
</div>

<script>
    const canvas = document.querySelector('#liquid') as HTMLCanvasElement;
    const gl = canvas.getContext('webgl')!;

    // Shader code for liquid effect
    const vertexShader = `
        attribute vec2 position;
        void main() {
            gl_Position = vec4(position, 0.0, 1.0);
        }
    `;

    const fragmentShader = `
        precision highp float;
        uniform vec2 resolution;
        uniform float time;
        uniform vec2 mouse;
        uniform vec3 colors[5];

        void main() {
            vec2 uv = gl_FragCoord.xy / resolution;
            float t = time * 0.2;
            vec2 m = mouse / resolution;
            
            float d = length(uv - m);
            float r = 0.0;
            
            // Create multiple metaballs
            for(int i = 0; i < 8; i++) {
                float x = 0.5 + 0.3 * cos(float(i) * 1.5 + t + sin(t * 0.8));
                float y = 0.5 + 0.3 * sin(float(i) * 1.5 + t + cos(t * 0.8));
                vec2 blob = vec2(x, y);
                float db = length(uv - blob);
                r += 0.02 / db;
            }

            // Mouse interaction
            r += 0.02 / d;

            // Color mixing
            vec3 col = mix(
                mix(colors[0], colors[1], sin(t) * 0.5 + 0.5),
                mix(colors[2], colors[3], cos(t) * 0.5 + 0.5),
                r
            );

            gl_FragColor = vec4(col * r, 1.0);
        }
    `;

    // Setup WebGL
    function setupShader() {
        const program = gl.createProgram()!;
        const vs = gl.createShader(gl.VERTEX_SHADER)!;
        const fs = gl.createShader(gl.FRAGMENT_SHADER)!;

        gl.shaderSource(vs, vertexShader);
        gl.shaderSource(fs, fragmentShader);
        gl.compileShader(vs);
        gl.compileShader(fs);
        gl.attachShader(program, vs);
        gl.attachShader(program, fs);
        gl.linkProgram(program);
        gl.useProgram(program);

        return program;
    }

    function resize() {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        gl.viewport(0, 0, canvas.width, canvas.height);
    }

    const program = setupShader();
    resize();
    window.addEventListener('resize', resize);

    // Setup vertices
    const vertices = new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]);
    const buffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);

    // Setup attributes and uniforms
    const position = gl.getAttribLocation(program, 'position');
    gl.vertexAttribPointer(position, 2, gl.FLOAT, false, 0, 0);
    gl.enableVertexAttribArray(position);

    const resolutionLocation = gl.getUniformLocation(program, 'resolution');
    const timeLocation = gl.getUniformLocation(program, 'time');
    const mouseLocation = gl.getUniformLocation(program, 'mouse');
    const colorsLocation = gl.getUniformLocation(program, 'colors');

    // Colors for the liquid
    const colors = new Float32Array([
        0.5, 0.0, 1.0,  // Purple
        0.0, 0.5, 1.0,  // Blue
        0.0, 1.0, 0.5,  // Cyan
        0.5, 0.0, 0.5,  // Magenta
        0.0, 0.0, 0.5   // Dark Blue
    ]);

    gl.uniform3fv(colorsLocation, colors);
    gl.uniform2f(resolutionLocation, canvas.width, canvas.height);

    // Animation
    let mouseX = 0, mouseY = 0;
    document.addEventListener('mousemove', (e) => {
        mouseX = e.clientX;
        mouseY = canvas.height - e.clientY;
    });

    function animate(time: number) {
        gl.uniform1f(timeLocation, time * 0.001);
        gl.uniform2f(mouseLocation, mouseX, mouseY);
        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
        requestAnimationFrame(animate);
    }

    animate(0);
</script>

<style>
@import url('https://fonts.googleapis.com/css2?family=Yaldevi:wght@200..700&display=swap');

    .canvas {
        width: 100%;
        height: 100vh;
        background: #000;
        overflow: hidden;
    }

    canvas {
        display: block;
    }

    .nav-links {
        position: fixed;
        top: 2rem;
        left: 2rem;
        z-index: 100;
    }

    .nav-links a {
        color: #fff;
        text-decoration: none;
        font-size: 0.8rem;
        letter-spacing: 0.2em;
        opacity: 0.7;
        transition: opacity 0.3s;
    }

    .quote-container {
        position: fixed;
        left: 60%;
        top: 50%;
        transform: translateY(-50%);
        text-align: left;
        z-index: 10;
        pointer-events: none;
        padding: 2rem;

    }

    .quote {
        font-family: "Yaldevi", serif;
        font-size: clamp(2rem, 6vw, 8rem);
        color: rgba(255, 255, 255, 0.8);
        margin: 0;
        line-height: 1;
        letter-spacing: -0.02em;
        text-shadow: 0 0 20px rgba(0, 255, 255, 0.3);
    }



    @media (max-width: 768px) {
        .quote-container {
            right: 2rem;
            left: 2rem;
            text-align: center;
        }
    }
</style>
