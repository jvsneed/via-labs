---
---

<div class="canvas">
    <nav class="nav-links">
        <a href="/">RETURN TO LAB</a>
    </nav>
    <canvas id="fluid-canvas"></canvas>
</div>

<script>
    import * as THREE from 'three';

    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({
        canvas: document.querySelector('#fluid-canvas') as HTMLCanvasElement,
        antialias: true
    });

    // Setup
    renderer.setSize(window.innerWidth, window.innerHeight);
    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));
    renderer.setClearColor(0x000000);
    camera.position.z = 5;

    // Create fluid mesh
    const geometry = new THREE.PlaneGeometry(10, 10, 50, 50);
    const positions = geometry.attributes.position;
    const material = new THREE.MeshPhongMaterial({
        color: 0x00ffff,
        wireframe: true,
        side: THREE.DoubleSide,
        transparent: true,
        opacity: 0.5
    });

    const plane = new THREE.Mesh(geometry, material);
    scene.add(plane);

    // Add lights
    const light = new THREE.PointLight(0xffffff, 1);
    light.position.set(0, 0, 5);
    scene.add(light);
    scene.add(new THREE.AmbientLight(0x404040));

    // Animation loop
    function animate() {
        requestAnimationFrame(animate);

        // Animate vertices
        const time = Date.now() * 0.001;
        for (let i = 0; i < positions.count; i++) {
            const x = positions.getX(i);
            const y = positions.getY(i);
            const z = Math.sin((x + time) * 0.5) * Math.cos((y + time) * 0.5) * 0.5;
            positions.setZ(i, z);
        }
        positions.needsUpdate = true;

        plane.rotation.x = Math.PI * 0.25;
        plane.rotation.z += 0.001;

        renderer.render(scene, camera);
    }

    // Handle resize
    window.addEventListener('resize', () => {
        camera.aspect = window.innerWidth / window.innerHeight;
        camera.updateProjectionMatrix();
        renderer.setSize(window.innerWidth, window.innerHeight);
    });

    animate();
</script>

<style>
    .canvas {
        width: 100%;
        height: 100vh;
        background: #000;
        overflow: hidden;
        position: relative;
    }

    canvas {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .nav-links {
        position: fixed;
        top: 2rem;
        left: 2rem;
        z-index: 100;
    }

    .nav-links a {
        color: #fff;
        text-decoration: none;
        font-size: 0.8rem;
        letter-spacing: 0.2em;
        opacity: 0.7;
        transition: opacity 0.3s;
    }

    .nav-links a:hover {
        opacity: 1;
    }
</style>